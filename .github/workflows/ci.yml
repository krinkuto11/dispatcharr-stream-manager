name: Build and Push Docker Image to GHCR

on:
  release:
    types: [published]
  pull_request:
    branches:
      - dev
    types: [closed]

jobs:
  build:
    if: |
      github.event_name == 'release' ||
      (github.event_name == 'pull_request' && github.base_ref == 'dev' && github.event.pull_request.merged == true)
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            platform: linux/amd64
          - runner: ubuntu-22.04-arm
            platform: linux/arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-${{ runner.arch }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-buildx-

    - name: Log in to GitHub Container Registry
      if: github.event_name == 'release' || (github.event_name == 'pull_request' && github.base_ref == 'dev' && github.event.pull_request.merged == true)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      if: github.event_name == 'release' || (github.event_name == 'pull_request' && github.base_ref == 'dev' && github.event.pull_request.merged == true)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/streamflow
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Build and push Docker image by digest
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        dockerfile: ./Dockerfile
        platforms: ${{ matrix.platform }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/streamflow,push-by-digest=true,name-canonical=true,push=true

    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ strategy.job-index }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  merge:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'release' ||
      (github.event_name == 'pull_request' && github.base_ref == 'dev' && github.event.pull_request.merged == true)
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/streamflow
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          tags=""
          if [ "${{ github.event_name }}" = "release" ]; then
            tags=$(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")
          else
            tags="-t ghcr.io/${{ github.repository_owner }}/streamflow:pr-test"
          fi
          docker buildx imagetools create $tags \
            $(printf 'ghcr.io/${{ github.repository_owner }}/streamflow@sha256:%s ' *)

      - name: Inspect image
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/streamflow:${{ steps.meta.outputs.version }}
          else
            docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/streamflow:pr-test
          fi
